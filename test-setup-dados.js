// Script para preparar dados de teste para valida√ß√£o de exclus√£o de janela
// Execute no console do navegador (F12) quando estiver logado como supervisor

async function prepararDadosTeste() {
    console.log('üîß Preparando dados de teste...');

    // 1. Buscar uma janela operacional existente
    const responseJanelas = await fetch('/api/supervisor/janelas-operacionais', {
        headers: {
            'X-Supervisor-Id': '42', // Ajuste conforme seu ID
            'X-Regional-Id': '1'     // Ajuste conforme sua regional
        }
    });

    const janelas = await responseJanelas.json();
    console.log('üìã Janelas encontradas:', janelas);

    if (!janelas.data || janelas.data.length === 0) {
        console.log('‚ùå Nenhuma janela encontrada. Crie uma janela primeiro.');
        return;
    }

    const janela = janelas.data[0];
    console.log('üéØ Usando janela:', janela);

    // 2. Buscar opera√ß√µes dessa janela
    const responseOperacoes = await fetch(`/api/unified/operacoes?janela_id=${janela.id}`);
    const operacoes = await responseOperacoes.json();
    console.log('‚ö° Opera√ß√µes encontradas:', operacoes);

    if (!operacoes.data || operacoes.data.length === 0) {
        console.log('‚ùå Nenhuma opera√ß√£o encontrada. Crie uma opera√ß√£o primeiro.');
        return;
    }

    const operacao = operacoes.data[0];
    console.log('üéØ Usando opera√ß√£o:', operacao);

    // 3. Inativar a opera√ß√£o diretamente via API
    const responseInativar = await fetch('/api/supervisor/operacoes/inativar-multiplas', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-Supervisor-Id': '42', // Ajuste conforme seu ID
            'X-Regional-Id': '1'     // Ajuste conforme sua regional
        },
        body: JSON.stringify({
            operacaoIds: [operacao.id],
            inativar: true,
            motivo: 'Teste de valida√ß√£o de exclus√£o'
        })
    });

    const resultadoInativar = await responseInativar.json();
    console.log('‚úÖ Resultado inativa√ß√£o:', resultadoInativar);

    if (resultadoInativar.success) {
        console.log(`‚úÖ Dados preparados! Agora tente excluir a janela ID: ${janela.id}`);
        console.log(`üìù A opera√ß√£o ID: ${operacao.id} foi inativada e deve bloquear a exclus√£o.`);

        return {
            janelaId: janela.id,
            operacaoId: operacao.id,
            proximoPasso: `Agora v√° na interface e tente excluir a janela "${janela.dataInicio} - ${janela.dataFim}"`
        };
    } else {
        console.log('‚ùå Erro ao inativar opera√ß√£o:', resultadoInativar);
    }
}

// Executar automaticamente
prepararDadosTeste();